"""New revision

Revision ID: 22625d91f206
Revises: 9b6bdf2b2eb2
Create Date: 2025-03-11 15:38:40.873175

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '22625d91f206'
down_revision: Union[str, None] = '9b6bdf2b2eb2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('collection')
    op.drop_index('ix_user_email', table_name='user')
    op.drop_index('ix_user_google_id', table_name='user')
    op.drop_index('ix_user_id', table_name='user')
    op.drop_index('ix_user_name', table_name='user')
    op.drop_index('ix_user_photo_url', table_name='user')
    op.drop_table('user')
    op.drop_index('ix_ask_recipe_description', table_name='ask_recipe')
    op.drop_index('ix_ask_recipe_id', table_name='ask_recipe')
    op.drop_table('ask_recipe')
    op.drop_index('ix_preparation_id', table_name='preparation')
    op.drop_index('ix_preparation_title', table_name='preparation')
    op.drop_table('preparation')
    op.drop_index('ix_image_id', table_name='image')
    op.drop_table('image')
    op.drop_index('ix_order_amount', table_name='order')
    op.drop_index('ix_order_id', table_name='order')
    op.drop_table('order')
    op.drop_index('ix_session_id', table_name='session')
    op.drop_table('session')
    op.drop_table('session_recipe')
    op.drop_index('ix_plan_amount', table_name='plan')
    op.drop_index('ix_plan_description', table_name='plan')
    op.drop_index('ix_plan_id', table_name='plan')
    op.drop_index('ix_plan_name', table_name='plan')
    op.drop_index('ix_plan_plan_id', table_name='plan')
    op.drop_table('plan')
    op.drop_index('ix_recipe_id', table_name='recipe')
    op.drop_index('ix_recipe_title', table_name='recipe')
    op.drop_table('recipe')
    op.drop_index('ix_ingredient_id', table_name='ingredient')
    op.drop_index('ix_ingredient_title', table_name='ingredient')
    op.drop_table('ingredient')
    op.drop_index('ix_categories_id', table_name='categories')
    op.drop_index('ix_categories_name', table_name='categories')
    op.drop_table('categories')
    op.drop_table('recipe_categories')
    op.drop_table('recipe_collection')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recipe_collection',
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('collection_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], name='recipe_collection_collection_id_fkey'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='recipe_collection_recipe_id_fkey'),
    sa.PrimaryKeyConstraint('recipe_id', 'collection_id', name='recipe_collection_pkey')
    )
    op.create_table('recipe_categories',
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='recipe_categories_category_id_fkey'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='recipe_categories_recipe_id_fkey'),
    sa.PrimaryKeyConstraint('recipe_id', 'category_id', name='recipe_categories_pkey')
    )
    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='categories_pkey')
    )
    op.create_index('ix_categories_name', 'categories', ['name'], unique=True)
    op.create_index('ix_categories_id', 'categories', ['id'], unique=False)
    op.create_table('ingredient',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("'Sem descrição'::character varying"), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='ingredient_recipe_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ingredient_pkey')
    )
    op.create_index('ix_ingredient_title', 'ingredient', ['title'], unique=False)
    op.create_index('ix_ingredient_id', 'ingredient', ['id'], unique=False)
    op.create_table('recipe',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('recipe_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("'Sem descrição'::character varying"), autoincrement=False, nullable=False),
    sa.Column('preparation_time', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=False),
    sa.Column('serving_size', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('dificulty', sa.VARCHAR(), server_default=sa.text("'Fácil'::character varying"), autoincrement=False, nullable=False),
    sa.Column('portions', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], name='recipe_session_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='recipe_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_recipe_title', 'recipe', ['title'], unique=False)
    op.create_index('ix_recipe_id', 'recipe', ['id'], unique=False)
    op.create_table('plan',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('plan_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('plan_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='plan_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_plan_plan_id', 'plan', ['plan_id'], unique=True)
    op.create_index('ix_plan_name', 'plan', ['name'], unique=False)
    op.create_index('ix_plan_id', 'plan', ['id'], unique=False)
    op.create_index('ix_plan_description', 'plan', ['description'], unique=False)
    op.create_index('ix_plan_amount', 'plan', ['amount'], unique=False)
    op.create_table('session_recipe',
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='session_recipe_recipe_id_fkey'),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], name='session_recipe_session_id_fkey'),
    sa.PrimaryKeyConstraint('recipe_id', 'session_id', name='session_recipe_pkey')
    )
    op.create_table('session',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('session_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('recipeType', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='session_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_session_id', 'session', ['id'], unique=False)
    op.create_table('order',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('plan_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_payment', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expired_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.id'], name='order_plan_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='order_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_pkey')
    )
    op.create_index('ix_order_id', 'order', ['id'], unique=False)
    op.create_index('ix_order_amount', 'order', ['amount'], unique=False)
    op.create_table('image',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='image_recipe_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='image_pkey')
    )
    op.create_index('ix_image_id', 'image', ['id'], unique=False)
    op.create_table('preparation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('step', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='preparation_recipe_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='preparation_pkey')
    )
    op.create_index('ix_preparation_title', 'preparation', ['title'], unique=False)
    op.create_index('ix_preparation_id', 'preparation', ['id'], unique=False)
    op.create_table('ask_recipe',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ask_recipe_pkey')
    )
    op.create_index('ix_ask_recipe_id', 'ask_recipe', ['id'], unique=False)
    op.create_index('ix_ask_recipe_description', 'ask_recipe', ['description'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('google_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('photo_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('plan_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.id'], name='user_plan_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_photo_url', 'user', ['photo_url'], unique=False)
    op.create_index('ix_user_name', 'user', ['name'], unique=False)
    op.create_index('ix_user_id', 'user', ['id'], unique=False)
    op.create_index('ix_user_google_id', 'user', ['google_id'], unique=True)
    op.create_index('ix_user_email', 'user', ['email'], unique=False)
    op.create_table('collection',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('icon_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='collection_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='collection_pkey')
    )
    # ### end Alembic commands ###
